version: 2.1
description: |
    Easily deploy applications to AWS CodeDeploy on CircleCI with the aws-code-deploy orb

orbs:
    aws-cli: circleci/aws-cli@0.1
    aws-code-deploy: circleci/aws-code-deploy@2.0.0

commands:
    deploy-bundle:
        description: |
            Deploy from a bundle and wait until the deployment has successfully completed.
        parameters:
            application-name: 
                description: codex-server-application
                type: string
            bundle-bucket: 
                description: codex-server-s3bucket
                type: string
            bundle-key: 
                description: code
                type: string
            bundle-type:
                default: zip
                description: The file type used for an application revision bundle. Currently defaults to 'zip'
                type: string
            deploy-bundle-arguments:
                default: ""
                description: If you wish to pass any additional arguments to the aws create-deployment command
                type: string
            deployment-config:
                default: CodeDeployDefault.OneAtATime
                description: Predefined deployment configuration name.
                type: string
            deployment-group: 
                description: CodexServerDeploymentGroup
                type: string
            get-deployment-group-arguments:
                default: ""
                description: If you wish to pass any additional arguments to the get-deployment-group command
                type: string
        steps:
            - run:
                command: |
                    ID=$(aws deploy create-deployment \
                            --application-name << parameters.application-name >> \
                            --deployment-group-name << parameters.deployment-group >> \
                            --deployment-config-name << parameters.deployment-config >> \
                            --s3-location bucket=<< parameters.bundle-bucket >>,bundleType=<< parameters.bundle-type >>,key=<< parameters.bundle-key >>.<< parameters.bundle-type >> \
                            --output text \
                            --query '[deploymentId]'<<# parameters.deploy-bundle-arguments >> << parameters.deploy-bundle-arguments >><</parameters.deploy-bundle-arguments >>)
                    STATUS=$(aws deploy get-deployment \
                              --deployment-id $ID \
                              --output text \
                              --query '[deploymentInfo.status]'<<# parameters.get-deployment-group-arguments >> << parameters.get-deployment-group-arguments >><</parameters.get-deployment-group-arguments >>)
                    while [[ $STATUS == "Created" || $STATUS == "InProgress" || $STATUS == "Pending" || $STATUS == "Queued" || $STATUS == "Ready" ]]; do
                      echo "Status: $STATUS..."
                      STATUS=$(aws deploy get-deployment \
                                --deployment-id $ID \
                                --output text \
                                --query '[deploymentInfo.status]'<<# parameters.get-deployment-group-arguments >> << parameters.get-deployment-group-arguments >><</parameters.get-deployment-group-arguments >>)
                      sleep 5
                    done
                    if [[ $STATUS == "Succeeded" ]]; then
                      EXITCODE=0
                      echo "Deployment finished."
                    else
                      EXITCODE=1
                      echo "Deployment failed!"
                    fi
                    aws deploy get-deployment --deployment-id $ID<<# parameters.get-deployment-group-arguments >> << parameters.get-deployment-group-arguments >><</parameters.get-deployment-group-arguments >>
                    exit $EXITCODE
                name: deploy-bundle
    push-bundle:
        description: |
            Bundles and uploads to Amazon Simple Storage Service (Amazon S3) an application revision
        parameters:
            application-name: 
                description: codex-server-application
                type: string
            arguments:
                default: ""
                description: If you wish to pass any additional arguments to the aws deploy command
                type: string
            bundle-bucket: 
                description: codex-server-s3bucket
                type: string
            bundle-key: 
                description: code
                type: string
            bundle-source:
                default: .
                description: The directory relative to your project to package up into an application revision.
                type: string
            bundle-type:
                default: zip
                description: The file type used for an application revision bundle. Currently defaults to 'zip'
                type: string
        steps:
            - run:
                command: |
                    aws deploy push \
                      --application-name << parameters.application-name >> \
                      --source << parameters.bundle-source >> \
                      --s3-location s3://<< parameters.bundle-bucket >>/<< parameters.bundle-key >>.<< parameters.bundle-type >><<# parameters.arguments >> << parameters.arguments >><</parameters.arguments >>
                name: push-bundle
jobs:
    deploy:
        description: Ensures an application and deployment group exist then proceeds to bundle and upload an application revision to S3. Once uploaded this job will finally create a deployment based on that revision.
        executor: aws-cli/default
        parameters:
            application-name: 
                description: codex-server-application
                type: string
            arguments:
                default: ""
                description: If you wish to pass any additional arguments to the aws deploy command
                type: string
            bundle-bucket:
                description:  codex-server-s3bucket
                type: string
            bundle-key: 
                description:  code
                type: string
            bundle-source:
                default: .
                description: The directory relative to your project to package up into an application revision.
                type: string
            bundle-type:
                default: zip
                description: The file type used for an application revision bundle. Currently defaults to 'zip'
                type: string
            deploy-bundle-arguments:
                default: ""
                description: If you wish to pass any additional arguments to the deploy-bundle command
                type: string
            deployment-config:
                default: CodeDeployDefault.OneAtATime
                description: Predefined deployment configuration name.
                type: string
            deployment-group:
                description:  CodexServerDeploymentGroup
                type: string
            get-deployment-group-arguments:
                default: ""
                description: If you wish to pass any additional arguments to the get-deployment-group command
                type: string
            service-role-arn: 
                description: arn:aws:iam::951813463780:role/codex-deploy-role
                type: string
        steps:
            - checkout
            - aws-cli/setup
            - create-application:
                application-name: << parameters.application-name >>
                arguments: << parameters.arguments >>
            - create-deployment-group:
                application-name: << parameters.application-name >>
                arguments: << parameters.arguments >>
                deployment-config: << parameters.deployment-config >>
                deployment-group: << parameters.deployment-group >>
                get-deployment-group-arguments: << parameters.get-deployment-group-arguments >>
                service-role-arn: << parameters.service-role-arn >>
            - push-bundle:
                application-name: << parameters.application-name >>
                arguments: << parameters.arguments >>
                bundle-bucket: << parameters.bundle-bucket >>
                bundle-key: << parameters.bundle-key >>
                bundle-source: << parameters.bundle-source >>
                bundle-type: << parameters.bundle-type >>
            - deploy-bundle:
                application-name: << parameters.application-name >>
                bundle-bucket: << parameters.bundle-bucket >>
                bundle-key: << parameters.bundle-key >>
                bundle-type: << parameters.bundle-type >>
                deploy-bundle-arguments: << parameters.deploy-bundle-arguments >>
                deployment-config: << parameters.deployment-config >>
                deployment-group: << parameters.deployment-group >>
                get-deployment-group-arguments: << parameters.get-deployment-group-arguments >>
workflows:
  deploy_application:
    jobs:
      - aws-code-deploy/deploy:
          application-name: codex-server-application
          bundle-bucket: codex-server-s3bucket
          bundle-key: code/source
          deployment-group: CodexServerDeploymentGroup
          service-role-arn: arn:aws:iam::951813463780:role/CodexServerRoleForDeploy
